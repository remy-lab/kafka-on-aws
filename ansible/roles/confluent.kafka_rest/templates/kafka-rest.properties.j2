# Maintained by Ansible
{% for key, value in kafka_rest.properties.items() %}
{{key}}={{value}}
{% endfor %}

# Kafka Rest Configuration
listeners={{kafka_rest_http_protocol}}://0.0.0.0:{{kafka_rest_port}}
host.name={{inventory_hostname}}
{% if kafka_rest_ssl_enabled|bool %}
ssl.keystore.location={{keystore_path}}
ssl.keystore.password={{keystore_storepass}}
ssl.key.password={{keystore_keypass}}
{% if kafka_rest_ssl_mutual_auth_enabled|bool %}
ssl.client.auth=false
#Set to true if you wish to force Client SSL Authentication
ssl.truststore.location={{truststore_path}}
ssl.truststore.password={{truststore_storepass}}
{% endif %}
{% endif %}

# Kafka Broker Configuration
bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_port}}{% endfor %}

client.security.protocol={{kafka_broker_security_protocol}}
{% if kafka_broker_ssl_enabled|bool %}
client.ssl.truststore.location={{truststore_path}}
client.ssl.truststore.password={{truststore_storepass}}
{% if kafka_broker_ssl_mutual_auth_enabled|bool %}
client.ssl.keystore.location={{keystore_path}}
client.ssl.keystore.password={{keystore_storepass}}
client.ssl.key.password={{keystore_keypass}}
{% endif %}
{% endif %}
{% if sasl_protocol == 'plain' %}
client.sasl.mechanism=PLAIN
client.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
client.sasl.mechanism=GSSAPI
client.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
client.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{kafka_rest_kerberos_keytab_path | basename}}" \
   principal="{{kafka_rest_kerberos_principal}}";
{% endif %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
schema.registry.url={% for host in groups['schema_registry'] %}{% if loop.index > 1%},{% endif %}{{ schema_registry_http_protocol }}://{{ host }}:{{ schema_registry_listener_port }}{% endfor %}

{% endif %}
