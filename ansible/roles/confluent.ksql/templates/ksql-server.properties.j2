# Maintained by Ansible

# KSQL Configuration
listeners={{ksql_http_protocol}}://0.0.0.0:{{ksql_listener_port}}

# Kafka Broker Configuration
bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_port}}{% endfor %}

security.protocol={{kafka_broker_security_protocol}}
{% if kafka_broker_ssl_enabled|bool %}
# KSQL SSL properties shared with Kafka Broker
ssl.truststore.location={{truststore_path}}
ssl.truststore.password={{truststore_storepass}}
ssl.keystore.location={{keystore_path}}
ssl.keystore.password={{keystore_storepass}}
ssl.key.password={{keystore_keypass}}
{% endif %}
{% if sasl_protocol == 'plain' %}
sasl.mechanism=PLAIN
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
sasl.mechanism=GSSAPI
sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}

{% for key, value in ksql.properties.items() %}
{{key}}={{value}}
{% endfor %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
ksql.schema.registry.url={% for host in groups['schema_registry'] %}{% if loop.index > 1%},{% endif %}{{ schema_registry_http_protocol }}://{{ host }}:{{ schema_registry_listener_port }}{% endfor %}

{% endif %}

# Monitoring Configuration
confluent.monitoring.interceptor.security.protocol={{kafka_broker_security_protocol}}
{% if kafka_broker_ssl_enabled|bool %}
confluent.monitoring.interceptor.ssl.truststore.location={{truststore_path}}
confluent.monitoring.interceptor.ssl.truststore.password={{truststore_storepass}}
{% if kafka_broker_ssl_mutual_auth_enabled|bool %}
confluent.monitoring.interceptor.ssl.keystore.location={{keystore_path}}
confluent.monitoring.interceptor.ssl.keystore.password={{keystore_storepass}}
confluent.monitoring.interceptor.ssl.key.password={{keystore_keypass}}
{% endif %}
{% endif %}
{% if sasl_protocol == 'plain' %}
confluent.monitoring.interceptor.sasl.mechanism=PLAIN
confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
confluent.monitoring.interceptor.sasl.mechanism=GSSAPI
confluent.monitoring.interceptor.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
confluent.monitoring.interceptor.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}
