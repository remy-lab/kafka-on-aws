# Install Packages
- name: Install the KSQL Packages
  yum:
    name: "{{item}}-{{confluent.package_version}}"
    state: latest
  loop: "{{ksql_packages}}"
  when: ansible_os_family == "RedHat"

- name: Install the KSQL Packages
  apt:
    name: "{{item}}={{confluent.package_version}}"
    update_cache: yes
  loop: "{{ksql_packages}}"
  when: ansible_os_family == "Debian"

# Configure environment
- name: Create Ksql Group
  group:
    name: "{{ksql.group}}"

- name: Create Ksql User
  user:
    name: "{{ksql.user}}"
    comment: "Connect Distributed User"
    system: yes
    group: "{{ksql.group}}"

- name: Create Keytabs Directory
  file:
    path: "{{kerberos.keytab_dir}}"
    group: "{{ksql.group}}"
    mode: '650'
    recurse: yes
  when: sasl_protocol == 'kerberos'

- name: Copy in Keytab File
  copy:
    src: "{{ksql_kerberos_keytab_path}}"
    dest: "{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}"
    mode: '600'
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
  when: sasl_protocol == 'kerberos'
  notify:
    - restart ksql

- name: Change streams directory ownership
  file:
    path: "{{ksql.streamsDataDir}}"
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
    state: directory
    mode: 0750

- name: Create Ksql Config
  template:
    src: ksql-server.properties.j2
    dest: "{{ksql.config_file}}"
    mode: 0640
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
  notify:
    - restart ksql

- name: Create Logs Directory
  file:
    path: "{{ksql.appender_log_path}}"
    group: "{{ksql.group}}"
    owner: "{{ksql.user}}"
    mode: '764'
    recurse: yes

- name: Create Ksql log4j Config
  template:
    src: ksql-server_log4j.properties.j2
    dest: "{{ksql.log4j_file}}"
    mode: 0640
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
  notify:
    - restart ksql

- name: Ksql Jaas Config
  template:
    src: ksql-server_jaas.conf.j2
    dest: "{{ksql_jaas_file}}"
    mode: 0640
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
  when: sasl_protocol == "kerberos"
  notify:
    - restart ksql

- name: Create Service Override Directory
  file:
    path: "{{ksql.systemd_override}}"
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
    state: directory
    mode: 0640

- name: Write Service Overrides
  template:
    src: override.conf.j2
    dest: "{{ksql.systemd_override}}/override.conf"
    mode: 0640
    owner: "{{ksql.user}}"
    group: "{{ksql.group}}"
  notify:
    - reload systemd
    - restart ksql

- name: Certs were Updated - Trigger Restart
  command: /bin/true
  notify: restart ksql
  when: certs_updated|bool

- meta: flush_handlers

- name: Start Ksql Service
  systemd:
    name: "{{ksql.service_name}}"
    enabled: "{{ksql.systemd.enabled}}"
    state: "{{ksql.systemd.state}}"
